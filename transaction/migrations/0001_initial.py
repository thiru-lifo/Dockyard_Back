# Generated by Django 4.0.2 on 2023-07-13 15:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('master', '0001_initial'),
        ('access', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcquisitionMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_acquisition_method',
                'verbose_name_plural': 'psr_acquisition_method',
                'db_table': 'master.psr_acquisition_method',
            },
        ),
        migrations.CreateModel(
            name='Annexures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'gls_annexures',
                'verbose_name_plural': 'gls_annexures',
                'db_table': 'master.gls_annexures',
            },
        ),
        migrations.CreateModel(
            name='ConceptDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refinement_of_values', models.TextField(blank=True, null=True)),
                ('powering_requirements', models.TextField(blank=True, null=True)),
                ('total_heat_load_calculation', models.TextField(blank=True, null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'ConceptDesign',
                'verbose_name_plural': 'ConceptDesign',
                'db_table': 'psr.concept_design',
            },
        ),
        migrations.CreateModel(
            name='DocumentSections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'gls_document_sections',
                'verbose_name_plural': 'gls_document_sections',
                'db_table': 'master.gls_document_sections',
            },
        ),
        migrations.CreateModel(
            name='DocumentSubSections',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsections')),
            ],
            options={
                'verbose_name': 'gls_document_sub_sections',
                'verbose_name_plural': 'gls_document_sub_sections',
                'db_table': 'master.gls_document_sub_sections',
            },
        ),
        migrations.CreateModel(
            name='DocumentSubSections2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsections')),
                ('document_sub_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsubsections')),
            ],
            options={
                'verbose_name': 'gls_document_sub_sections2',
                'verbose_name_plural': 'gls_document_sub_sections2',
                'db_table': 'master.gls_document_sub_sections2',
            },
        ),
        migrations.CreateModel(
            name='Forms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_forms',
                'verbose_name_plural': 'psr_forms',
                'db_table': 'psr.forms',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('intoduction', models.TextField(blank=True, null=True)),
                ('critical_design_driver', models.TextField(blank=True, null=True)),
                ('weapons_and_sensors', models.TextField(blank=True, null=True)),
                ('composite_communication_capability', models.TextField(blank=True, null=True)),
                ('flag_platform', models.TextField(blank=True, null=True)),
                ('speed_and_endurance', models.TextField(blank=True, null=True)),
                ('operations_cycle', models.TextField(blank=True, null=True)),
                ('stealth', models.TextField(blank=True, null=True)),
                ('redundancy', models.TextField(blank=True, null=True)),
                ('aviation', models.TextField(blank=True, null=True)),
                ('autonomous_systems', models.TextField(blank=True, null=True)),
                ('unrep', models.TextField(blank=True, null=True)),
                ('survivability', models.TextField(blank=True, null=True)),
                ('medical_and_hadr_facilities', models.TextField(blank=True, null=True)),
                ('boats_and_landing_craft', models.TextField(blank=True, null=True)),
                ('upper_deck_equipment', models.TextField(blank=True, null=True)),
                ('habitability', models.TextField(blank=True, null=True)),
                ('nbcd_compliance', models.TextField(blank=True, null=True)),
                ('special_capabilities', models.TextField(blank=True, null=True)),
                ('manpower', models.TextField(blank=True, null=True)),
                ('project_activity_description', models.TextField(blank=True, null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaper',
                'verbose_name_plural': 'FormulationOfApproachPaper',
                'db_table': 'psr.formulation_of_approach_paper',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaper')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperResponsibility',
                'verbose_name_plural': 'FormulationOfApproachPaperResponsibility',
                'db_table': 'psr.formulation_of_approach_paper_responsibility',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('initiater', models.SmallIntegerField(blank=True, null=True)),
                ('recommender', models.SmallIntegerField(blank=True, null=True)),
                ('approver', models.SmallIntegerField(blank=True, null=True)),
                ('approved_level', models.SmallIntegerField(default=1)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.forms')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'global_transaction',
                'verbose_name_plural': 'global_transaction',
                'db_table': 'psr.global_transaction',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('directorate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.unit')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'global_transaction_responsibility',
                'verbose_name_plural': 'global_transaction_responsibility',
                'db_table': 'psr.global_transaction_responsibility',
            },
        ),
        migrations.CreateModel(
            name='IncorporationOfDesignInputs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_estimation', models.TextField(blank=True, null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'IncorporationOfDesignInputs',
                'verbose_name_plural': 'IncorporationOfDesignInputs',
                'db_table': 'psr.incorporation_of_design_inputs',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_role', models.TextField(blank=True, null=True)),
                ('secondary_role', models.TextField(blank=True, null=True)),
                ('budgeted_cost_per_platform', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('accord_of_aon', models.DateField(blank=True, null=True)),
                ('conclusion_of_contract', models.DateField(blank=True, null=True)),
                ('induction', models.DateField(blank=True, null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('acquisition_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.acquisitionmethod')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'InitiationNotes',
                'verbose_name_plural': 'InitiationNotes',
                'db_table': 'psr.initiation_notes',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'InputsForStaffRequirements',
                'verbose_name_plural': 'InputsForStaffRequirements',
                'db_table': 'psr.inputs_for_staff_requirements',
            },
        ),
        migrations.CreateModel(
            name='PresentationOfApproachPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(blank=True, null=True, upload_to='presentation_of_approach_paper/')),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'PresentationOfApproachPaper',
                'verbose_name_plural': 'PresentationOfApproachPaper',
                'db_table': 'psr.presentation_of_approach_paper',
            },
        ),
        migrations.CreateModel(
            name='ProjectModuleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('display_name', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'project_module_master',
                'verbose_name_plural': 'project_module_master',
                'db_table': 'dashboard.project_module_master',
            },
        ),
        migrations.CreateModel(
            name='PSRDataFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standards', models.TextField(blank=True, null=True)),
                ('whole_ship_features', models.TextField(blank=True, null=True)),
                ('man_power', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'data_flow',
                'verbose_name_plural': 'data_flow',
                'db_table': 'psr.data_flow',
            },
        ),
        migrations.CreateModel(
            name='PSRSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=255, null=True)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_ip', models.GenericIPAddressField(null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_section',
                'verbose_name_plural': 'psr_section',
                'db_table': 'master.psr_section',
            },
        ),
        migrations.CreateModel(
            name='PSRSectionUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsection')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.unit')),
            ],
            options={
                'verbose_name': 'psr_section_unit',
                'verbose_name_plural': 'psr_section_unit',
                'db_table': 'master.psr_section_unit',
            },
        ),
        migrations.CreateModel(
            name='ReceiptOfRFIResponses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(blank=True, null=True, upload_to='receipt_of_rfi_responses/')),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'ReceiptOfRFIResponses',
                'verbose_name_plural': 'ReceiptOfRFIResponses',
                'db_table': 'psr.receipt_of_rfi_responses',
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=15)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.forms')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'version',
                'verbose_name_plural': 'version',
                'db_table': 'psr.version',
            },
        ),
        migrations.CreateModel(
            name='VersionTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('view', models.BooleanField(default=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('global_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.globaltransaction')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
                ('version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.version')),
            ],
            options={
                'verbose_name': 'version_details',
                'verbose_name_plural': 'version_details',
                'db_table': 'psr.version_details',
            },
        ),
        migrations.CreateModel(
            name='SystemEquipmentCompartmentTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(1, 'system'), (2, 'equipment'), (3, 'compartment')])),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('capabilities_feature', models.TextField(blank=True, null=True)),
                ('weight_volume_power_consumption', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('interface', models.TextField(blank=True, null=True)),
                ('procurement_router', models.TextField(blank=True, null=True)),
                ('vendor', models.TextField(blank=True, null=True)),
                ('cost', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('sustenance', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'SystemEquipmentCompartment_temp',
                'verbose_name_plural': 'SystemEquipmentCompartmentTemp',
                'db_table': 'psr.system_equipment_compartment_temp',
            },
        ),
        migrations.CreateModel(
            name='SystemEquipmentCompartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(1, 'system'), (2, 'equipment'), (3, 'compartment')])),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('capabilities_feature', models.TextField(blank=True, null=True)),
                ('weight_volume_power_consumption', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('interface', models.TextField(blank=True, null=True)),
                ('procurement_router', models.TextField(blank=True, null=True)),
                ('vendor', models.TextField(blank=True, null=True)),
                ('cost', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('sustenance', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'SystemEquipmentCompartment',
                'verbose_name_plural': 'SystemEquipmentCompartment',
                'db_table': 'psr.system_equipment_compartment',
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_standard',
                'verbose_name_plural': 'psr_standard',
                'db_table': 'master.psr_standard',
            },
        ),
        migrations.CreateModel(
            name='SSSMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'sss_mapping',
                'verbose_name_plural': 'sss_mapping',
                'db_table': 'psr.sss_mapping',
            },
        ),
        migrations.CreateModel(
            name='SSS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sss',
                'verbose_name_plural': 'sss',
                'db_table': 'master.sss',
            },
        ),
        migrations.CreateModel(
            name='SecondaryRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_secondary_roles',
                'verbose_name_plural': 'psr_secondary_roles',
                'db_table': 'master.psr_secondary_roles',
            },
        ),
        migrations.CreateModel(
            name='ReceiptOfRFIResponsesSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='receipt_of_rfi_responses_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receipt_of_rfi_responses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.receiptofrfiresponses')),
            ],
            options={
                'verbose_name': 'ReceiptOfRFIResponsesSendMail',
                'verbose_name_plural': 'ReceiptOfRFIResponsesSendMail',
                'db_table': 'psr.receipt_of_rfi_responses_send_email',
            },
        ),
        migrations.CreateModel(
            name='ReceiptOfRFIResponsesDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='receipt_of_rfi_responses_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receipt_of_rfi_responses', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.receiptofrfiresponses')),
            ],
            options={
                'verbose_name': 'ReceiptOfRFIResponsesDocument',
                'verbose_name_plural': 'ReceiptOfRFIResponsesDocument',
                'db_table': 'psr.receipt_of_rfi_responses_document',
            },
        ),
        migrations.CreateModel(
            name='PSRUnitSystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsectionunit')),
                ('system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.system')),
            ],
            options={
                'verbose_name': 'psr_unit_systems',
                'verbose_name_plural': 'psr_unit_systems',
                'db_table': 'mapping.psr_unit_systems',
            },
        ),
        migrations.CreateModel(
            name='PSRUnitEquipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.equipment')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsectionunit')),
            ],
            options={
                'verbose_name': 'psr_unit_equipments',
                'verbose_name_plural': 'psr_unit_equipments',
                'db_table': 'mapping.psr_unit_equipments',
            },
        ),
        migrations.CreateModel(
            name='PSRUnitCompartments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compartment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.compartment')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsectionunit')),
            ],
            options={
                'verbose_name': 'psr_unit_compartment',
                'verbose_name_plural': 'psr_unit_compartment',
                'db_table': 'mapping.psr_unit_compartment',
            },
        ),
        migrations.CreateModel(
            name='PSRSubSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsection')),
            ],
            options={
                'verbose_name': 'psr_sub_section',
                'verbose_name_plural': 'psr_sub_section',
                'db_table': 'master.psr_sub_section',
            },
        ),
        migrations.CreateModel(
            name='PSRDataFlowsystems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('capabilities', models.TextField(blank=True, null=True)),
                ('weight', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('interface', models.TextField(blank=True, null=True)),
                ('procurement', models.TextField(blank=True, null=True)),
                ('vendor', models.TextField(blank=True, null=True)),
                ('cost', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('sustence', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('data_flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrdataflow')),
                ('system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.system')),
            ],
            options={
                'verbose_name': 'data_flow_systems',
                'verbose_name_plural': 'data_flow_systems',
                'db_table': 'psr.data_flow_systems',
            },
        ),
        migrations.CreateModel(
            name='PSRDataFlowGeneralSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roles', models.TextField(blank=True, null=True)),
                ('critical_design_drivers', models.TextField(blank=True, null=True)),
                ('operating_philosophy', models.TextField(blank=True, null=True)),
                ('area_of_operations', models.TextField(blank=True, null=True)),
                ('rules_and_regulations', models.TextField(blank=True, null=True)),
                ('general_remarks', models.TextField(blank=True, null=True)),
                ('displacement', models.TextField(blank=True, null=True)),
                ('dimensions', models.TextField(blank=True, null=True)),
                ('speed', models.TextField(blank=True, null=True)),
                ('endurance_and_range', models.TextField(blank=True, null=True)),
                ('sea_worthiness', models.TextField(blank=True, null=True)),
                ('propulsion', models.TextField(blank=True, null=True)),
                ('operating_conditions', models.TextField(blank=True, null=True)),
                ('design_and_construction_standards', models.TextField(blank=True, null=True)),
                ('stealth', models.TextField(blank=True, null=True)),
                ('ergonomics', models.TextField(blank=True, null=True)),
                ('complement', models.TextField(blank=True, null=True)),
                ('cots_technology', models.TextField(blank=True, null=True)),
                ('protection', models.TextField(blank=True, null=True)),
                ('unrep', models.TextField(blank=True, null=True)),
                ('boats_and_usvs', models.TextField(blank=True, null=True)),
                ('noise_reduction', models.TextField(blank=True, null=True)),
                ('op_logistic_management_information_system', models.TextField(blank=True, null=True)),
                ('ipms', models.TextField(blank=True, null=True)),
                ('surveillance_and_security_arrangement', models.TextField(blank=True, null=True)),
                ('cim', models.TextField(blank=True, null=True)),
                ('green_warship', models.TextField(blank=True, null=True)),
                ('construction', models.TextField(blank=True, null=True)),
                ('automation_and_redundancy', models.TextField(blank=True, null=True)),
                ('workshops', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'data_flow_general_section',
                'verbose_name_plural': 'data_flow_general_section',
                'db_table': 'psr.data_flow_general_section',
            },
        ),
        migrations.CreateModel(
            name='PSRDataFlowEquipments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('capabilities', models.TextField(blank=True, null=True)),
                ('weight', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('interface', models.TextField(blank=True, null=True)),
                ('procurement', models.TextField(blank=True, null=True)),
                ('vendor', models.TextField(blank=True, null=True)),
                ('cost', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('sustence', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('data_flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrdataflow')),
                ('equipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.equipment')),
            ],
            options={
                'verbose_name': 'data_flow_equipments',
                'verbose_name_plural': 'data_flow_equipments',
                'db_table': 'psr.data_flow_equipments',
            },
        ),
        migrations.CreateModel(
            name='PSRDataFlowCompartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('compartment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.compartment')),
                ('data_flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrdataflow')),
            ],
            options={
                'verbose_name': 'data_flow_compartment',
                'verbose_name_plural': 'data_flow_compartment',
                'db_table': 'psr.data_flow_compartment',
            },
        ),
        migrations.AddField(
            model_name='psrdataflow',
            name='psr_section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.psrsection'),
        ),
        migrations.CreateModel(
            name='ProjectModuleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField()),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('project_module_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.projectmodulemaster')),
            ],
            options={
                'verbose_name': 'project_module_status',
                'verbose_name_plural': 'project_module_status',
                'db_table': 'dashboard.project_module_status',
            },
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
            ],
            options={
                'verbose_name': 'ProjectLog',
                'verbose_name_plural': 'ProjectLog',
                'db_table': 'log.projectlog',
            },
        ),
        migrations.CreateModel(
            name='PrimaryRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_primary_roles',
                'verbose_name_plural': 'psr_primary_roles',
                'db_table': 'master.psr_primary_roles',
            },
        ),
        migrations.CreateModel(
            name='PresentationOfApproachPaperSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='presentation_of_approach_paper_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('presentation_of_approach_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.presentationofapproachpaper')),
            ],
            options={
                'verbose_name': 'PresentationOfApproachPaperSendMail',
                'verbose_name_plural': 'PresentationOfApproachPaperSendMail',
                'db_table': 'psr.presentation_of_approach_paper_send_email',
            },
        ),
        migrations.CreateModel(
            name='PresentationOfApproachPaperDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='presentation_of_approach_paper_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('presentation_of_approach_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.presentationofapproachpaper')),
            ],
            options={
                'verbose_name': 'PresentationOfApproachPaperDocument',
                'verbose_name_plural': 'PresentationOfApproachPaperDocument',
                'db_table': 'psr.presentation_of_approach_paper_document',
            },
        ),
        migrations.CreateModel(
            name='PlanForManpowerInduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=15)),
                ('sequence', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'psr_plan_for_manpower_induction',
                'verbose_name_plural': 'psr_plan_for_manpower_induction',
                'db_table': 'master.psr_plan_for_manpower_induction',
            },
        ),
        migrations.CreateModel(
            name='InputsSRSSR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sr_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.inputsforstaffrequirement')),
                ('sss', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.sss')),
            ],
            options={
                'verbose_name': 'inputs_sr_ssr',
                'verbose_name_plural': 'inputs_sr_ssr',
                'db_table': 'psr.inputs_sr_ssr',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirementSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('weight_volume_and_power_consumption', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'InputsForStaffRequirementSystem',
                'verbose_name_plural': 'InputsForStaffRequirementSystem',
                'db_table': 'psr.inputs_for_staff_requirements_system',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirementSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='inputs_for_staff_requirement/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inputs_for_staff_requirement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.inputsforstaffrequirement')),
            ],
            options={
                'verbose_name': 'InputsforStaffRequirementSendMail',
                'verbose_name_plural': 'InputsforStaffRequirementSendMail',
                'db_table': 'psr.inputs_for_staff_requirement_send_email',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirementEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('weight_volume_and_power_consumption', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'InputsForStaffRequirementEquipment',
                'verbose_name_plural': 'InputsForStaffRequirementEquipment',
                'db_table': 'psr.inputs_for_staff_requirements_equipment',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirementDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='inputs_for_staff_requirement/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inputs_for_staff_requirement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.inputsforstaffrequirement')),
            ],
            options={
                'verbose_name': 'InputsforStaffRequirementDocument',
                'verbose_name_plural': 'InputsforStaffRequirementDocument',
                'db_table': 'psr.inputs_for_staff_requirement_document',
            },
        ),
        migrations.CreateModel(
            name='InputsForStaffRequirementCompartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('numbers', models.TextField(blank=True, null=True)),
                ('weight_volume_and_power_consumption', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('layout', models.TextField(blank=True, null=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('standards', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'InputsForStaffRequirementCompartment',
                'verbose_name_plural': 'InputsForStaffRequirementCompartment',
                'db_table': 'psr.inputs_for_staff_requirements_compartment',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='initiation_notes_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotes')),
            ],
            options={
                'verbose_name': 'InitiationNotesSendEmail',
                'verbose_name_plural': 'InitiationNotesSendEmail',
                'db_table': 'psr.initiation_notes_send_email',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesGLSMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.SmallIntegerField(choices=[(1, 'Section'), (2, 'Annexure')])),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'GLS Initiation Notes Master',
                'verbose_name_plural': 'GLS Initiation Notes Master',
                'db_table': 'gls.initiation_notes_master',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesGLS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.SmallIntegerField(choices=[(1, 'Section'), (2, 'Annexure')])),
                ('paragraph_title', models.CharField(blank=True, max_length=255, null=True)),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('primary', models.IntegerField(null=True)),
                ('secondary1', models.IntegerField(null=True)),
                ('secondary2', models.IntegerField(null=True)),
                ('secondary3', models.IntegerField(null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('annexures', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.annexures')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsections')),
                ('document_sub_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsubsections')),
                ('document_sub_sections2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsubsections2')),
                ('initiation_notes_gls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesglsmaster')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'GLS Initiation Notes',
                'verbose_name_plural': 'GLS Initiation Notes',
                'db_table': 'gls.initiation_notes',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='initiation_notes_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotes')),
            ],
            options={
                'verbose_name': 'InitiationNotesDocument',
                'verbose_name_plural': 'InitiationNotesDocument',
                'db_table': 'psr.initiation_notes_document',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesBLSMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.SmallIntegerField(choices=[(1, 'Section'), (2, 'Annexure')])),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'BLS Initiation Notes Master',
                'verbose_name_plural': 'BLS Initiation Notes Master',
                'db_table': 'bls.initiation_notes_master',
            },
        ),
        migrations.CreateModel(
            name='InitiationNotesBLS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.SmallIntegerField(choices=[(1, 'Section'), (2, 'Annexure')])),
                ('paragraph_title', models.CharField(blank=True, max_length=255, null=True)),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('primary', models.IntegerField(null=True)),
                ('secondary1', models.IntegerField(null=True)),
                ('secondary2', models.IntegerField(null=True)),
                ('secondary3', models.IntegerField(null=True)),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('annexures', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.annexures')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsections')),
                ('document_sub_sections', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsubsections')),
                ('document_sub_sections2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.documentsubsections2')),
                ('initiation_notes_bls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesblsmaster')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'BLS Initiation Notes',
                'verbose_name_plural': 'BLS Initiation Notes',
                'db_table': 'bls.initiation_notes',
            },
        ),
        migrations.AddField(
            model_name='initiationnotes',
            name='plan_for_manpower_induction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.planformanpowerinduction'),
        ),
        migrations.AddField(
            model_name='initiationnotes',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project'),
        ),
        migrations.AddField(
            model_name='initiationnotes',
            name='standard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.standard'),
        ),
        migrations.CreateModel(
            name='IncorporationOfDesignInputsSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='incorporation_of_design_inputs_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('incorporation_of_design_inputs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.incorporationofdesigninputs')),
            ],
            options={
                'verbose_name': 'IncorporationOfDesignInputsSendMail',
                'verbose_name_plural': 'IncorporationOfDesignInputsSendMail',
                'db_table': 'psr.incorporation_of_design_inputs_send_email',
            },
        ),
        migrations.CreateModel(
            name='IncorporationOfDesignInputsDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='incorporation_of_design_inputs_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('incorporation_of_design_inputs', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.incorporationofdesigninputs')),
            ],
            options={
                'verbose_name': 'IncorporationOfDesignInputsDocument',
                'verbose_name_plural': 'IncorporationOfDesignInputsDocument',
                'db_table': 'psr.incorporation_of_design_inputs_document',
            },
        ),
        migrations.CreateModel(
            name='GLSInitiationNotesSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='gls_initiation_notes_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes_gls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesglsmaster')),
            ],
            options={
                'verbose_name': 'GLSInitiationNotesSendMail',
                'verbose_name_plural': 'GLSInitiationNotesSendMail',
                'db_table': 'gls.gls_initiation_notes_send_email',
            },
        ),
        migrations.CreateModel(
            name='GLSInitiationNotesDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='gls_initiation_notes_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes_gls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesglsmaster')),
            ],
            options={
                'verbose_name': 'GLSInitiationNotesDocument',
                'verbose_name_plural': 'GLSInitiationNotesDocument',
                'db_table': 'gls.gls_initiation_notes_document',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionResponsibilityDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('directorate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.unit')),
                ('gt_responsibility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.globaltransactionresponsibility')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'global_transaction_responsibility_detail',
                'verbose_name_plural': 'global_transaction_responsibility_detail',
                'db_table': 'psr.global_transaction_responsibility_detail',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved_status', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('approved_remark', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.forms')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'global_transactionlog',
                'verbose_name_plural': 'global_transactionlog',
                'db_table': 'log.global_transaction',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionEditPdf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html', models.TextField(blank=True, null=True)),
                ('form_id', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
            ],
            options={
                'verbose_name': 'global_transaction_edit_pdf',
                'verbose_name_plural': 'global_transaction_edit_pdf',
                'db_table': 'psr.global_transaction_edit_pdf',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionDetailsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('para_no', models.CharField(blank=True, max_length=100, null=True)),
                ('view', models.BooleanField(default=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('global_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.globaltransaction')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'global_transaction_detailslog',
                'verbose_name_plural': 'global_transaction_detailslog',
                'db_table': 'log.global_transaction_details',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('para_no', models.CharField(blank=True, max_length=100, null=True)),
                ('view', models.BooleanField(default=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('global_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.globaltransaction')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'global_transaction_details',
                'verbose_name_plural': 'global_transaction_details',
                'db_table': 'psr.global_transaction_details',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.project')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'global_transaction_comments',
                'verbose_name_plural': 'global_transaction_comments',
                'db_table': 'psr.global_transaction_comments',
            },
        ),
        migrations.CreateModel(
            name='GlobalTransactionApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, null=True)),
                ('type', models.SmallIntegerField(blank=True, choices=[(1, 'Recommendation'), (2, 'Approval')], null=True)),
                ('status', models.SmallIntegerField(blank=True, choices=[(1, 'Approved'), (2, 'Rejected')], null=True)),
                ('approved_level', models.SmallIntegerField(null=True)),
                ('approved_on', models.DateTimeField(auto_now_add=True)),
                ('approved_ip', models.GenericIPAddressField(null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('approved_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.globaltransaction')),
            ],
            options={
                'verbose_name': 'global_transaction_approval',
                'verbose_name_plural': 'global_transaction_approvals',
                'db_table': 'transaction.global_transaction_approval',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='formulation_of_approach_paper_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaper')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperSendMail',
                'verbose_name_plural': 'FormulationOfApproachPaperSendMail',
                'db_table': 'psr.formulation_of_approach_paper_send_email',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperResponsibilitySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper_responsibility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaperresponsibility')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperResponsibilitySystem',
                'verbose_name_plural': 'FormulationOfApproachPaperResponsibilitySystem',
                'db_table': 'psr.formulation_of_approach_paper_responsibility_system',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperResponsibilityEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper_responsibility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaperresponsibility')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperResponsibilityEquipment',
                'verbose_name_plural': 'FormulationOfApproachPaperResponsibilityEquipment',
                'db_table': 'psr.formulation_of_approach_paper_responsibility_equipment',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperResponsibilityCompartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compartment', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')], default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper_responsibility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaperresponsibility')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperResponsibilityCompartment',
                'verbose_name_plural': 'FormulationOfApproachPaperResponsibilityCompartment',
                'db_table': 'psr.formulation_of_approach_paper_responsibility_compartment',
            },
        ),
        migrations.CreateModel(
            name='FormulationOfApproachPaperDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='formulation_of_approach_paper_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('formulation_of_approach_paper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.formulationofapproachpaper')),
            ],
            options={
                'verbose_name': 'FormulationOfApproachPaperDocument',
                'verbose_name_plural': 'FormulationOfApproachPaperDocument',
                'db_table': 'psr.formulation_of_approach_paper_document',
            },
        ),
        migrations.CreateModel(
            name='FormsMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('Class', models.ForeignKey(default=13, on_delete=django.db.models.deletion.CASCADE, to='master.class')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transaction.forms')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.module')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsection')),
                ('sub_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.submodule')),
                ('sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsection')),
                ('sub_sub_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='master.globalsubsubsection')),
            ],
            options={
                'verbose_name': 'forms_mapping',
                'verbose_name_plural': 'forms_mapping',
                'db_table': 'psr.forms_mapping',
            },
        ),
        migrations.CreateModel(
            name='ExcelFileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excel_file_upload', models.FileField(blank=True, null=True, upload_to='Excel/GLS/')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'GLS Excel File Upload',
                'verbose_name_plural': 'GLS Excel File Upload',
                'db_table': 'gls.excel_file_upload',
            },
        ),
        migrations.CreateModel(
            name='ConceptDesignSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='concept_design_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('concept_design', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.conceptdesign')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ConceptDesignSendMail',
                'verbose_name_plural': 'ConceptDesignSendMail',
                'db_table': 'psr.concept_design_send_email',
            },
        ),
        migrations.CreateModel(
            name='ConceptDesignDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='concept_design_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('concept_design', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.conceptdesign')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ConceptDesignDocument',
                'verbose_name_plural': 'ConceptDesignDocument',
                'db_table': 'psr.concept_design_document',
            },
        ),
        migrations.CreateModel(
            name='BLSInitiationNotesSendMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='bls_initiation_notes_email_attachment/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField()),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes_bls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesblsmaster')),
            ],
            options={
                'verbose_name': 'BLSInitiationNotesSendMail',
                'verbose_name_plural': 'BLSInitiationNotesSendMail',
                'db_table': 'bls.bls_initiation_notes_send_email',
            },
        ),
        migrations.CreateModel(
            name='BLSInitiationNotesDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document_remark', models.CharField(blank=True, max_length=255, null=True)),
                ('file_name', models.FileField(blank=True, null=True, upload_to='bls_initiation_notes_document/')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Delete')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_ip', models.GenericIPAddressField(default='192.168.0.1')),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=100, null=True)),
                ('modified_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('initiation_notes_bls_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.initiationnotesblsmaster')),
            ],
            options={
                'verbose_name': 'BLSInitiationNotesDocument',
                'verbose_name_plural': 'BLSInitiationNotesDocument',
                'db_table': 'bls.bls_initiation_notes_document',
            },
        ),
        migrations.CreateModel(
            name='DataAccessForms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transaction.forms')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Access Form',
                'verbose_name_plural': 'Data Access Forms',
                'db_table': 'access.data_access_forms',
                'unique_together': {('user', 'form')},
            },
        ),
    ]
