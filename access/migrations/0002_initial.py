# Generated by Django 4.0.2 on 2023-07-13 15:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('access', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='userrolemapping',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrolemapping',
            name='user_role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AddField(
            model_name='userroledesignation',
            name='user_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AddField(
            model_name='rolespermissions',
            name='process',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.process'),
        ),
        migrations.AddField(
            model_name='rolespermissions',
            name='user_role',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AddField(
            model_name='processrolemapping',
            name='process',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.process'),
        ),
        migrations.AddField(
            model_name='processrolemapping',
            name='user_role',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AddField(
            model_name='processflow',
            name='process',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.process'),
        ),
        migrations.AddField(
            model_name='processflow',
            name='user_role',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AddField(
            model_name='modulescomponentsattributes',
            name='module_component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.modulescomponents'),
        ),
        migrations.AddField(
            model_name='modulescomponents',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.modules'),
        ),
        migrations.AddField(
            model_name='modules',
            name='process',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='access.process'),
        ),
        migrations.AddField(
            model_name='accessmodules',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.modules'),
        ),
        migrations.AddField(
            model_name='accessmodules',
            name='module_components',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='access.modulescomponents'),
        ),
        migrations.AddField(
            model_name='accessmodules',
            name='module_components_attribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='access.modulescomponentsattributes'),
        ),
        migrations.AddField(
            model_name='accessmodules',
            name='user_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='access.accessuserroles'),
        ),
        migrations.AlterUniqueTogether(
            name='userrolemapping',
            unique_together={('user_role', 'user')},
        ),
    ]
